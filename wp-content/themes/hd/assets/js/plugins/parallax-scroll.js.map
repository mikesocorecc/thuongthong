{"version":3,"file":"/js/plugins/parallax-scroll.js","mappings":"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","sources":["webpack://webhd/./resources/js/parallax-scroll.js"],"sourcesContent":["/*jshint esversion: 6 */\r\nconst $ = jQuery;\r\n\r\n$(function() {\r\n    ParallaxScroll.init();\r\n});\r\n\r\nvar ParallaxScroll = {\r\n    /* PUBLIC VARIABLES */\r\n    showLogs: false,\r\n    round: 1000,\r\n\r\n    /* PUBLIC FUNCTIONS */\r\n    init: function() {\r\n        this._log(\"init\");\r\n        if (this._inited) {\r\n            this._log(\"Already Inited\");\r\n            this._inited = true;\r\n            return;\r\n        }\r\n        this._requestAnimationFrame = (function(){\r\n            return  window.requestAnimationFrame       ||\r\n                window.webkitRequestAnimationFrame ||\r\n                window.mozRequestAnimationFrame    ||\r\n                window.oRequestAnimationFrame      ||\r\n                window.msRequestAnimationFrame     ||\r\n                function(/* function */ callback, /* DOMElement */ element){\r\n                    window.setTimeout(callback, 1000 / 60);\r\n                };\r\n        })();\r\n        this._onScroll(true);\r\n    },\r\n\r\n    /* PRIVATE VARIABLES */\r\n    _inited: false,\r\n    _properties: ['x', 'y', 'z', 'rotateX', 'rotateY', 'rotateZ', 'scaleX', 'scaleY', 'scaleZ', 'scale'],\r\n    _requestAnimationFrame:null,\r\n\r\n    /* PRIVATE FUNCTIONS */\r\n    _log: function(message) {\r\n        if (this.showLogs) console.log(\"Parallax Scroll / \" + message);\r\n    },\r\n    _onScroll: function(noSmooth) {\r\n        var scroll = $(document).scrollTop();\r\n        var windowHeight = $(window).height();\r\n        this._log(\"onScroll \" + scroll);\r\n        $(\"[data-parallax]\").each($.proxy(function(index, el) {\r\n            var $el = $(el);\r\n            var properties = [];\r\n            var applyProperties = false;\r\n            var style = $el.data(\"style\");\r\n            if (style == undefined) {\r\n                style = $el.attr(\"style\") || \"\";\r\n                $el.data(\"style\", style);\r\n            }\r\n            var datas = [$el.data(\"parallax\")];\r\n            var iData;\r\n            for(iData = 2; ; iData++) {\r\n                if($el.data(\"parallax\"+iData)) {\r\n                    datas.push($el.data(\"parallax-\"+iData));\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            var datasLength = datas.length;\r\n            for(iData = 0; iData < datasLength; iData ++) {\r\n                var data = datas[iData];\r\n                var scrollFrom = data[\"from-scroll\"];\r\n                if (scrollFrom == undefined) scrollFrom = Math.max(0, $(el).offset().top - windowHeight);\r\n                scrollFrom = scrollFrom | 0;\r\n                var scrollDistance = data[\"distance\"];\r\n                var scrollTo = data[\"to-scroll\"];\r\n                if (scrollDistance == undefined && scrollTo == undefined) scrollDistance = windowHeight;\r\n                scrollDistance = Math.max(scrollDistance | 0, 1);\r\n                var easing = data[\"easing\"];\r\n                var easingReturn = data[\"easing-return\"];\r\n                if (easing == undefined || !$.easing|| !$.easing[easing]) easing = null;\r\n                if (easingReturn == undefined || !$.easing|| !$.easing[easingReturn]) easingReturn = easing;\r\n                if (easing) {\r\n                    var totalTime = data[\"duration\"];\r\n                    if (totalTime == undefined) totalTime = scrollDistance;\r\n                    totalTime = Math.max(totalTime | 0, 1);\r\n                    var totalTimeReturn = data[\"duration-return\"];\r\n                    if (totalTimeReturn == undefined) totalTimeReturn = totalTime;\r\n                    scrollDistance = 1;\r\n                    var currentTime = $el.data(\"current-time\");\r\n                    if(currentTime == undefined) currentTime = 0;\r\n                }\r\n                if (scrollTo == undefined) scrollTo = scrollFrom + scrollDistance;\r\n                scrollTo = scrollTo | 0;\r\n                var smoothness = data[\"smoothness\"];\r\n                if (smoothness == undefined) smoothness = 30;\r\n                smoothness = smoothness | 0;\r\n                if (noSmooth || smoothness == 0) smoothness = 1;\r\n                smoothness = smoothness | 0;\r\n                var scrollCurrent = scroll;\r\n                scrollCurrent = Math.max(scrollCurrent, scrollFrom);\r\n                scrollCurrent = Math.min(scrollCurrent, scrollTo);\r\n                if(easing) {\r\n                    if($el.data(\"sens\") == undefined) $el.data(\"sens\", \"back\");\r\n                    if(scrollCurrent>scrollFrom) {\r\n                        if($el.data(\"sens\") == \"back\") {\r\n                            currentTime = 1;\r\n                            $el.data(\"sens\", \"go\");\r\n                        }\r\n                        else {\r\n                            currentTime++;\r\n                        }\r\n                    }\r\n                    if(scrollCurrent<scrollTo) {\r\n                        if($el.data(\"sens\") == \"go\") {\r\n                            currentTime = 1;\r\n                            $el.data(\"sens\", \"back\");\r\n                        }\r\n                        else {\r\n                            currentTime++;\r\n                        }\r\n                    }\r\n                    if(noSmooth) currentTime = totalTime;\r\n                    $el.data(\"current-time\", currentTime);\r\n                }\r\n                this._properties.map($.proxy(function(prop) {\r\n                    var defaultProp = 0;\r\n                    var to = data[prop];\r\n                    if (to == undefined) return;\r\n                    if(prop==\"scale\" || prop==\"scaleX\" || prop==\"scaleY\" || prop==\"scaleZ\" ) {\r\n                        defaultProp = 1;\r\n                    }\r\n                    else {\r\n                        to = to | 0;\r\n                    }\r\n                    var prev = $el.data(\"_\" + prop);\r\n                    if (prev == undefined) prev = defaultProp;\r\n                    var next = ((to-defaultProp) * ((scrollCurrent - scrollFrom) / (scrollTo - scrollFrom))) + defaultProp;\r\n                    var val = prev + (next - prev) / smoothness;\r\n                    if(easing && currentTime>0 && currentTime<=totalTime) {\r\n                        var from = defaultProp;\r\n                        if($el.data(\"sens\") == \"back\") {\r\n                            from = to;\r\n                            to = -to;\r\n                            easing = easingReturn;\r\n                            totalTime = totalTimeReturn;\r\n                        }\r\n                        val = $.easing[easing](null, currentTime, from, to, totalTime);\r\n                    }\r\n                    val = Math.ceil(val * this.round) / this.round;\r\n                    if(val==prev&&next==to) val = to;\r\n                    if(!properties[prop]) properties[prop] = 0;\r\n                    properties[prop] += val;\r\n                    if (prev != properties[prop]) {\r\n                        $el.data(\"_\" + prop, properties[prop]);\r\n                        applyProperties = true;\r\n                    }\r\n                }, this));\r\n            }\r\n            if (applyProperties) {\r\n                if (properties[\"z\"] != undefined) {\r\n                    var perspective = data[\"perspective\"];\r\n                    if (perspective == undefined) perspective = 800;\r\n                    var $parent = $el.parent();\r\n                    if(!$parent.data(\"style\")) $parent.data(\"style\", $parent.attr(\"style\") || \"\");\r\n                    $parent.attr(\"style\", \"perspective:\" + perspective + \"px; -webkit-perspective:\" + perspective + \"px; \"+ $parent.data(\"style\"));\r\n                }\r\n                if(properties[\"scaleX\"] == undefined) properties[\"scaleX\"] = 1;\r\n                if(properties[\"scaleY\"] == undefined) properties[\"scaleY\"] = 1;\r\n                if(properties[\"scaleZ\"] == undefined) properties[\"scaleZ\"] = 1;\r\n                if (properties[\"scale\"] != undefined) {\r\n                    properties[\"scaleX\"] *= properties[\"scale\"];\r\n                    properties[\"scaleY\"] *= properties[\"scale\"];\r\n                    properties[\"scaleZ\"] *= properties[\"scale\"];\r\n                }\r\n                var translate3d = \"translate3d(\" + (properties[\"x\"] ? properties[\"x\"] : 0) + \"px, \" + (properties[\"y\"] ? properties[\"y\"] : 0) + \"px, \" + (properties[\"z\"] ? properties[\"z\"] : 0) + \"px)\";\r\n                var rotate3d = \"rotateX(\" + (properties[\"rotateX\"] ? properties[\"rotateX\"] : 0) + \"deg) rotateY(\" + (properties[\"rotateY\"] ? properties[\"rotateY\"] : 0) + \"deg) rotateZ(\" + (properties[\"rotateZ\"] ? properties[\"rotateZ\"] : 0) + \"deg)\";\r\n                var scale3d = \"scaleX(\" + properties[\"scaleX\"] + \") scaleY(\" + properties[\"scaleY\"] + \") scaleZ(\" + properties[\"scaleZ\"] + \")\";\r\n                var cssTransform = translate3d + \" \" + rotate3d + \" \" + scale3d + \";\";\r\n                this._log(cssTransform);\r\n                $el.attr(\"style\", \"transform:\" + cssTransform + \" -webkit-transform:\" + cssTransform + \" \" + style);\r\n            }\r\n        }, this));\r\n        if(window.requestAnimationFrame) {\r\n            window.requestAnimationFrame($.proxy(this._onScroll, this, false));\r\n        }\r\n        else {\r\n            this._requestAnimationFrame($.proxy(this._onScroll, this, false));\r\n        }\r\n    }\r\n};;"],"names":["$","jQuery","ParallaxScroll","init","showLogs","round","this","_log","_inited","_requestAnimationFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","_onScroll","_properties","message","console","log","noSmooth","scroll","document","scrollTop","windowHeight","height","each","proxy","index","el","$el","properties","applyProperties","style","data","undefined","attr","iData","datas","push","datasLength","length","scrollFrom","Math","max","offset","top","scrollDistance","scrollTo","easing","easingReturn","totalTime","totalTimeReturn","currentTime","smoothness","scrollCurrent","min","map","prop","defaultProp","to","prev","next","val","from","ceil","perspective","$parent","parent","cssTransform"],"sourceRoot":""}